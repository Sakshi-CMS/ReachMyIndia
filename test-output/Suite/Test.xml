<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="SakshiBhavsar" failures="1" tests="2" name="Test" time="65.98" errors="0" timestamp="2023-07-10T15:09:30 IST">
  <testcase classname="Generic.BaseTest" name="@AfterMethod getScreenshot" time="-1.688981966698E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated getScreenshot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated getScreenshot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod getScreenshot -->
  <testcase classname="Generic.BaseTest" name="@AfterMethod getScreenshot" time="-1.688981970171E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated getScreenshot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated getScreenshot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod getScreenshot -->
  <testcase classname="RMITestScript.Registration_Test" name="RegPage" time="53.699"/>
  <testcase classname="RMITestScript.Applicant_Details" name="form" time="3.186">
    <failure type="org.openqa.selenium.InvalidSelectorException" message="Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: &amp;apos;4.8.2&amp;apos;, revision: &amp;apos;826dbfc730&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;16.0.2&amp;apos;
Driver info: driver.version: unknown">
      <![CDATA[org.openqa.selenium.InvalidSelectorException: Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.8.2', revision: '826dbfc730'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.By$ByClassName.<init>(By.java:310)
at org.openqa.selenium.By.className(By.java:100)
at POM_Classes.Reg_Form.details(Reg_Form.java:98)
at RMITestScript.Applicant_Details.form(Applicant_Details.java:23)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- form -->
  <testcase classname="Generic.BaseTest" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="Generic.BaseTest" name="@BeforeSuite initialize" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite initialize -->
</testsuite> <!-- Test -->
